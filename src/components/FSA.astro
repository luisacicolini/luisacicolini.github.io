---
const states = [
  { id: "home", label: "Hi, I'm Luisa!", cx: 200, cy: 500, rx: 70, ry: 40, link: "/" },
  { id: "learning", label: "learning", cx: 250, cy: 300, rx: 70, ry: 40, link: "/learning" },
  { id: "doing", label: "doing", cx: 350, cy: 700, rx: 70, ry: 40, link: "/doing" },
  { id: "reading", label: "reading list", cx: 400, cy: 100, rx: 70, ry: 40, link: "/reading" },
  { id: "read", label: "read", cx: 600, cy: 200, rx: 70, ry: 40, link: "/read" },
  { id: "life", label: "life", cx: 450, cy: 450, rx: 70, ry: 40, link: "/life" },
  { id: "science", label: "science", cx: 700, cy: 350, rx: 70, ry: 40, link: "/science" },
  { id: "art&craft", label: "art&craft", cx: 700, cy: 750, rx: 70, ry: 40, link: "/artcraft" },
  { id: "music", label: "music", cx: 550, cy: 600, rx: 70, ry: 40, link: "/music" },
];



const transitions = [
  { from: "home", to: "learning", label: "I'm" },
  { from: "home", to: "doing", label: "I'm" },
  { from: "learning", to: "reading", label: "check my" },
  { from: "learning", to: "read", label: "I've recently" },
  { from: "learning", to: "life", label: "stuff about" },
  { from: "learning", to: "science", label: "how to" },
  { from: "doing", to: "art&craft", label: "sometimes" },
  { from: "doing", to: "music", label: "often" },
  { from: "music", to: "art&craft", label: "is like" },
  { from: "doing", to: "science", label: "mostly" },
  { from: "reading", to: "read", label: "becomes" },
];
---


<svg width="1000" height="1000" xmlns="http://www.w3.org/2000/svg">
  <!-- Arrowhead marker -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#fff" />
    </marker>
  </defs>


  <!-- Transitions -->
  {transitions.map((transition) => {
    const fromState = states.find((state) => state.id === transition.from);
    const toState = states.find((state) => state.id === transition.to);
    const midX = (fromState.cx + toState.cx) / 2;
    const midY = (fromState.cy + toState.cy) / 2;
    return (
      <>
        <line
          x1={fromState.cx}
          y1={fromState.cy}
          x2={toState.cx}
          y2={toState.cy}
          class="transition"
          marker-end="url(#arrowhead)"
          stroke="#fff"
          stroke-width="2"
        />
        <text x={midX} y={midY - 5} text-anchor="middle" fill="#fff" font-size="12px">
          {transition.label}
        </text>
      </>
    );
  })}
  <!-- States -->
  {states.map((state) => (
    <>
      <a href={state.link}>
        <ellipse class="state" cx={state.cx} cy={state.cy} rx={state.rx} ry={state.ry} />
        <text x={state.cx} y={state.cy + 5} text-anchor="middle" fill="#fff" font-size="14px" font-weight="bold">
          {state.label}
        </text>
      </a>
    </>
  ))}
</svg>

<style>
  svg {
    display: block;
    margin: 0 auto;
  }
  .state {
    fill:rgb(255, 201, 113);
    strokrgb(244, 187, 107)
    stroke-width: 1;
    cursor: pointer;
    transition: transform 0.3s;
  }
  .state:hover {
    transform: scale(1.1);
  }
  .transition {
    stroke: #fff;
    stroke-width: 2;
  }
</style>