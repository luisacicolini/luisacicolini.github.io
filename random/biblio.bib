@inproceedings{bourgeat2020essence,
  title={The essence of Bluespec: a core language for rule-based hardware design},
  author={Bourgeat, Thomas and Pit-Claudel, Cl{\'e}ment and Chlipala, Adam and Arvind},
  booktitle={Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={243--257},
  year={2020}
}

@inproceedings{procter2015semantics,
  title={Semantics driven hardware design, implementation, and verification with ReWire},
  author={Procter, Adam and Harrison, William L and Graves, Ian and Becchi, Michela and Allwein, Gerard},
  booktitle={Proceedings of the 16th ACM SIGPLAN/SIGBED Conference on Languages, Compilers and Tools for Embedded Systems 2015 CD-ROM},
  pages={1--10},
  year={2015}
}

@inproceedings{bernstein2021semantics,
  title={What are the semantics of hardware},
  author={Bernstein, Gilbert Louis and Ragan-Kelley, Jonathan},
  booktitle={Workshop on Languages, Tools, and Techniques for Accelerator Design (LATTE)},
  year={2021}
}

@article{carloni2001theory,
  title={Theory of latency-insensitive design},
  author={Carloni, Luca P and McMillan, Kenneth L and Sangiovanni-Vincentelli, Alberto L},
  journal={IEEE Transactions on computer-aided design of integrated circuits and systems},
  volume={20},
  number={9},
  pages={1059--1076},
  year={2001},
  publisher={IEEE}
}

@inproceedings{malik2008hardware,
  title={Hardware verification: Techniques, methodology and solutions},
  author={Malik, Sharad},
  booktitle={Tools and Algorithms for the Construction and Analysis of Systems: 14th International Conference, TACAS 2008, Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2008, Budapest, Hungary, March 29-April 6, 2008. Proceedings 14},
  pages={1--1},
  year={2008},
  organization={Springer}
}

@inproceedings{mukherjee2015hardware,
  title={Hardware verification using software analyzers},
  author={Mukherjee, Rajdeep and Kroening, Daniel and Melham, Tom},
  booktitle={2015 IEEE Computer Society Annual Symposium on VLSI},
  pages={7--12},
  year={2015},
  organization={IEEE}
}

@article{zhao2024k,
  title={K-CIRCT: A Layered, Composable, and Executable Formal Semantics for CIRCT Hardware IRs},
  author={Zhao, Jianhong and Kang, Jinhui and Zhao, Yongwang},
  journal={arXiv preprint arXiv:2404.18756},
  year={2024}
}


@misc{symbiyosys, 
  title={SymbiYosys (sby) -- Front-end for Yosys-based formal verification flows}, 
  url={https://github.com/YosysHQ/SymbiYosys}, 
  journal={GitHub}, 
  note={Accessed 24/11/21}
}


@InProceedings{gurfinkel2022program,
  title={Program verification with constrained horn clauses},
  author={Gurfinkel, Arie},
  booktitle={International Conference on Computer Aided Verification},
  pages={19--29},
  year={2022},
  organization={Springer}
}

@article{huang2018instruction,
  title={Instruction-level abstraction (ila) a uniform specification for system-on-chip (soc) verification},
  author={Huang, Bo-Yuan and Zhang, Hongce and Subramanyan, Pramod and Vizel, Yakir and Gupta, Aarti and Malik, Sharad},
  journal={ACM Transactions on Design Automation of Electronic Systems (TODAES)},
  volume={24},
  number={1},
  pages={1--24},
  year={2018},
  publisher={ACM New York, NY, USA}
}

@InProceedings{mattarei2018cosa,
  title={Cosa: Integrated verification for agile hardware design},
  author={Mattarei, Cristian and Mann, Makai and Barrett, Clark and Daly, Ross G and Huff, Dillon and Hanrahan, Pat},
  booktitle={2018 Formal Methods in Computer Aided Design (FMCAD)},
  pages={1--5},
  year={2018},
  organization={IEEE}
}

@misc{circt,
    note = {https://circt.llvm.org/, Online},
    title = {CIRCT},
    url = {https://circt.llvm.org/}
}

@misc{bvdecide, 
    note = {https://github.com/leanprover/lean4/, Online}, 
    title ={bv\_decide}, 
    url = {https://github.com/leanprover/lean4/}
}

@article{witharana2022survey,
  title={A survey on assertion-based hardware verification},
  author={Witharana, Hasini and Lyu, Yangdi and Charles, Subodha and Mishra, Prabhat},
  journal={ACM Computing Surveys (CSUR)},
  volume={54},
  number={11s},
  pages={1--33},
  year={2022},
  publisher={ACM New York, NY}
}

@incollection{melham1988abstraction,
  title={Abstraction mechanisms for hardware verification},
  author={Melham, Thomas F},
  booktitle={VLSI Specification, Verification and Synthesis},
  pages={267--291},
  year={1988},
  publisher={Springer}
}


@inproceedings{bachrach2012chisel,
author = {Bachrach, Jonathan and Vo, Huy and Richards, Brian and Lee, Yunsup and Waterman, Andrew and Avi\v{z}ienis, Rimas and Wawrzynek, John and Asanovi\'{c}, Krste},
title = {Chisel: constructing hardware in a Scala embedded language},
year = {2012},
isbn = {9781450311991},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2228360.2228584},
doi = {10.1145/2228360.2228584},
abstract = {In this paper we introduce Chisel, a new hardware construction language that supports advanced hardware design using highly parameterized generators and layered domain-specific hardware languages. By embedding Chisel in the Scala programming language, we raise the level of hardware design abstraction by providing concepts including object orientation, functional programming, parameterized types, and type inference. Chisel can generate a high-speed C++-based cycle-accurate software simulator, or low-level Verilog designed to map to either FPGAs or to a standard ASIC flow for synthesis. This paper presents Chisel, its embedding in Scala, hardware examples, and results for C++ simulation, Verilog emulation and ASIC synthesis.},
booktitle = {Proceedings of the 49th Annual Design Automation Conference},
pages = {1216–1225},
numpages = {10},
keywords = {CAD},
location = {San Francisco, California},
series = {DAC '12}
}

@InProceedings{niemetz2018btor2,
author="Niemetz, Aina
and Preiner, Mathias
and Wolf, Clifford
and Biere, Armin",
editor="Chockler, Hana
and Weissenbacher, Georg",
title="Btor2 , BtorMC and Boolector 3.0",
booktitle="Computer Aided Verification",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="587--595",
abstract="We describe Btor2, a word-level model checking format for capturing models of hardware and potentially software in a bit-precise manner. This simple, line-based and easy to parse format can be seen as a sorted extension of the word-level format Btor. It uses design principles from the bit-level format Aiger and follows semantics of the Smt-Lib logics of bit-vectors with arrays. This intermediate format can be used in various verification flows and is perfectly suited to establish a word-level model checking competition. It is supported by our new open source model checker BtorMC, which is built on top of version 3.0 of our SMT solver Boolector. We further provide new word-level benchmarks on which these open source tools are evaluated.",
isbn="978-3-319-96145-3"
}

@InProceedings{mlir_circt,
author={Eldridge, Schuyler and Barua, Prithayan and Chapyzhenka, Aliaksei and Izraelevitz, Adam and Koenig, Jack and Lattner, Chris and Lenharth, Andrew and Leontiev, George and Schuiki, Fabian and Sunder, Ram and Young, Andrew and Xia, Richard},
title={{MLIR as Hardware Compiler Infrastructure}},
booktitle={WOSET '21: Workshop on Open Source EDA Technology},
year={2021},
organization={SiFive}
}

@inproceedings{btor2,
  title={Btor2 , BtorMC and Boolector 3.0},
  author={Aina Niemetz and Mathias Preiner and Clifford Wolf and Armin Biere},
  booktitle={International Conference on Computer Aided Verification},
  year={2018},
  url={https://api.semanticscholar.org/CorpusID:51868414}
}

@techreport{aiger2,
  author = {Armin Biere and Keijo Heljanko and Siert Wieringa},
  title = {{AIGER 1.9} And Beyond},
  number = {11/2},
  date = {July 2011},
  institution = {Institute for Formal Models and Verification,
    Johannes Kepler University},
  address = {Altenbergerstr. 69, 4040 Linz, Austria},
  year={2011},
}




@INPROCEEDINGS{bluespec,
  author={Nikhil, R.},
  booktitle={Proceedings. Second ACM and IEEE International Conference on Formal Methods and Models for Co-Design, 2004. MEMOCODE '04.}, 
  title={Bluespec System Verilog: efficient, correct RTL from high level specifications}, 
  year={2004},
  volume={},
  number={},
  pages={69-70},
  keywords={Hardware;Productivity;High level synthesis;Atomic measurements;Application specific integrated circuits;Field programmable gate arrays;Flow graphs;Scheduling;Logic design;Predictive models},
  doi={10.1109/MEMCOD.2004.1459818}}

@article{bluespec_smt,
author = {Dave, Nirav and Katelman, Michael and King, Myron and Arvind, Arvind},
year = {2011},
month = {07},
pages = {},
title = {Verification of microarchitectural refinements in rule-based systems},
journal = {9th ACM/IEEE International Conference on Formal Methods and Models for Codesign, MEMOCODE 2011},
doi = {10.1109/MEMCOD.2011.5970511}
}

@article{bluespec_itp,
author = {Choi, Joonwon and Vijayaraghavan, Muralidaran and Sherman, Benjamin and Chlipala, Adam and Arvind},
title = {Kami: a platform for high-level parametric hardware specification and its modular verification},
year = {2017},
issue_date = {September 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {1},
number = {ICFP},
url = {https://doi.org/10.1145/3110268},
doi = {10.1145/3110268},
abstract = {It has become fairly standard in the programming-languages research world to verify functional programs in proof assistants using induction, algebraic simplification, and rewriting. In this paper, we introduce Kami, a Coq library that enables similar expressive and modular reasoning for hardware designs expressed in the style of the Bluespec language. We can specify, implement, and verify realistic designs entirely within Coq, ending with automatic extraction into a pipeline that bottoms out in FPGAs. Our methodology, using labeled transition systems, has been evaluated in a case study verifying an infinite family of multicore systems, with cache-coherent shared memory and pipelined cores implementing (the base integer subset of) the RISC-V instruction set.},
journal = {Proc. ACM Program. Lang.},
month = aug,
articleno = {24},
numpages = {30},
keywords = {proof assistants, hardware, formal verification}
}

@article{bhat2024verifying,
  title={Verifying Peephole Rewriting in SSA Compiler IRs},
  author={Bhat, Siddharth and Keizer, Alex and Hughes, Chris and Goens, Andr{\'e}s and Grosser, Tobias},
  journal={arXiv preprint arXiv:2407.03685},
  year={2024}
}

@inproceedings{barrett2010smt,
  title={The smt-lib standard: Version 2.0},
  author={Barrett, Clark and Stump, Aaron and Tinelli, Cesare and others},
  booktitle={Proceedings of the 8th international workshop on satisfiability modulo theories (Edinburgh, UK)},
  volume={13},
  pages={14},
  year={2010}
}

@inproceedings{de2008z3,
  title={Z3: An efficient SMT solver},
  author={De Moura, Leonardo and Bj{\o}rner, Nikolaj},
  booktitle={International conference on Tools and Algorithms for the Construction and Analysis of Systems},
  pages={337--340},
  year={2008},
  organization={Springer}
}

@article{asanovic2006landscape,
  title={The landscape of parallel computing research: A view from berkeley},
  author={Asanovic, Krste and Bodik, Ras and Catanzaro, Bryan and Gebis, Joseph and Husbands, Parry and Keutzer, Kurt and Patterson, David and Plishker, William and Shalf, John and Williams, Samuel Webb},
  year={2006}
}

@inproceedings{hennessy2018new,
  title={A new golden age for computer architecture: domain-specific hardware/software co-design, enhanced},
  author={Hennessy, John and Patterson, David},
  booktitle={ACM/IEEE 45th Annual International Symposium on Computer Architecture (ISCA)},
  year={2018}
}

@inproceedings{foster2013design,
  title={Why the design productivity gap never happened},
  author={Foster, Harry D},
  booktitle={2013 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)},
  pages={581--584},
  year={2013},
  organization={IEEE}
}

@techreport{wilson2020verifstudy,
     title = {{The 2020 Wilson Research Group Functional Verification Study}},
     author = {Harry Foster},
     year = {2020},
     institution = {Siemens},
}

@article{vasudevan2021learning,
  title={Learning semantic representations to verify hardware designs},
  author={Vasudevan, Shobha and Jiang, Wenjie Joe and Bieber, David and Singh, Rishabh and Ho, C Richard and Sutton, Charles and others},
  journal={Advances in Neural Information Processing Systems},
  volume={34},
  pages={23491--23504},
  year={2021}
}

@misc{circt_sifive,
  note = {https://github.com/sifive/chisel-circt, Online}, 
  title ={CIRCT for SiFive}, 
  url = {https://github.com/sifive/chisel-circt}
}

@inproceedings{hunt2006sat,
  title={A SAT-based procedure for verifying finite state machines in ACL2},
  author={Hunt Jr, Warren A and Reeber, Erik},
  booktitle={Proceedings of the sixth international workshop on the ACL2 theorem prover and its applications},
  pages={127--135},
  year={2006}
}

@misc{mlir,
      title={MLIR: A Compiler Infrastructure for the End of Moore's Law}, 
      author={Chris Lattner and Mehdi Amini and Uday Bondhugula and Albert Cohen and Andy Davis and Jacques Pienaar and River Riddle and Tatiana Shpeisman and Nicolas Vasilache and Oleksandr Zinenko},
      year={2020},
      eprint={2002.11054},
      archivePrefix={arXiv},
      primaryClass={cs.PL}
}
